name: Build Akatsuki

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30
    strategy:
      matrix:
        platform: [x86, x64]  # 同时构建 32 位和 64 位

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 若项目包含子模块

      - name: Setup MSBuild
        shell: pwsh
        run: |
          # 查找 Visual Studio 安装路径
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" `
                      -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
          if (-not $vsPath) { throw "Visual Studio not found" }
          
          # 设置 MSBuild 路径到环境变量
          $msbuildPath = Join-Path $vsPath "MSBuild\Current\Bin\MSBuild.exe"
          echo "MSBUILD_PATH=$msbuildPath" >> $env:GITHUB_ENV
          echo "Using MSBuild: $msbuildPath"

      - name: Build Akatsuki
        shell: pwsh
        run: |
          # 假设解决方案文件路径为 Source/uacme.sln
          $solutionPath = "Source\uacme.sln"
          
          # 根据平台动态选择配置名称（根据实际项目调整）
          $platform = "${{ matrix.platform }}"
          if ($platform -eq "x86") { $targetPlatform = "Win32" }  # Visual Studio 默认用 Win32 表示 x86
          else { $targetPlatform = "x64" }

          # 执行编译
          & $env:MSBUILD_PATH "$solutionPath" `
            /p:Configuration=Release `
            /p:Platform=$targetPlatform `
            /p:PlatformToolset=v143 `
            /p:WindowsTargetPlatformVersion=10.0 `
            /verbosity:minimal

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: akatsuki-bin-${{ matrix.platform }}
          path: |
            # 根据实际输出目录调整（示例路径）
            Source\Akagi\output\**\*.exe
